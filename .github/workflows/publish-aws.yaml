name: AWS AMI

on:
  push:
    branches:
      - main
    paths:
      - "packer/aws/**"
      - "packer/scripts/**"
      - ".github/workflows/publish-aws.yaml"
      - "tasks/aws.yaml"
      - "tasks/test.yaml"
  schedule:
    - cron: '0 6 1 * *' # Runs monthly at midnight MST
  workflow_dispatch: # Allows manual triggering of the workflow

permissions:
  id-token: write
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Ensure each matrix job will not be interrupted by the failure of another
      matrix:
        base: ["ubuntu", "rhel"]
        aws_env: ["commercial", "govcloud"]
        rke2_version: ["v1.31.9+rke2r1", "v1.32.5+rke2r1", "v1.33.2+rke2r1"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      - name: Set AWS Variables
        run: |
          if [ "${{ matrix.aws_env }}" == "commercial" ]; then
            echo "AWS_REGION=us-west-2" >> $GITHUB_ENV
            echo "AWS_ORG_ROLE_TO_ASSUME=${{ secrets.AWS_COMMERCIAL_ORG_ROLE_TO_ASSUME }}" >> $GITHUB_ENV
            echo "AWS_OLD_CI_ACCOUNT_ID=${{ secrets.AWS_OLD_COMMERCIAL_CI_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "AMI_ORG_ARN=${{ secrets.AWS_COMMERCIAL_ORG_ARN }}" >> $GITHUB_ENV
          elif [ "${{ matrix.aws_env }}" == "govcloud" ]; then
            echo "AWS_REGION=us-gov-west-1" >> $GITHUB_ENV
            echo "AWS_ORG_ROLE_TO_ASSUME=${{ secrets.AWS_GOVCLOUD_ORG_ROLE_TO_ASSUME }}" >> $GITHUB_ENV
            echo "AWS_OLD_CI_ACCOUNT_ID=${{ secrets.AWS_OLD_GOVCLOUD_CI_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "AMI_ORG_ARN=${{ secrets.AWS_GOVCLOUD_ORG_ARN }}" >> $GITHUB_ENV
          fi
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
        with:
          role-to-assume: ${{ env.AWS_ORG_ROLE_TO_ASSUME }}
          role-session-name: ${{ github.job || github.event.client_payload.pull_request.head.sha || github.sha }}
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 3600
      - name: Setup UDS
        if: always()
        uses: defenseunicorns/uds-common/.github/actions/setup@76287d41ec5f06ecbdd0a6453877a78675aceffe # v0.11.2
      - name: Setup Tofu
        uses: opentofu/setup-opentofu@592200bd4b9bbf4772ace78f887668b1aee8f716 # v1.0.5
        with:
          tofu_wrapper: false
          tofu_version: 1.6.2
      - name: Publish ${{ matrix.base }} ${{ matrix.rke2_version }} AMI
        run: uds run --no-progress publish-ami-${{ matrix.base }} --set AWS_REGION=${{ env.AWS_REGION }} --set RKE2_VERSION=${{ matrix.rke2_version }} --set AMI_USERS='["${{ env.AWS_OLD_CI_ACCOUNT_ID }}"]' --set AMI_ORG_ARNS='["${{ env.AMI_ORG_ARN }}"]'
      - name: Test ${{ matrix.base }} ${{ matrix.rke2_version }} AMI
        shell: bash -e -o pipefail {0}
        env:
          KUBECONFIG: "/home/runner/.kube/rke2-config"
        run: uds run --no-progress test-cluster --set SHA=${{ github.sha }} --set DISTRO=${{ matrix.base }} --set AWS_REGION=${{ env.AWS_REGION }} --set RKE2_VERSION=${{ matrix.rke2_version }}
      - name: Teardown test infrastructure
        shell: bash -e -o pipefail {0}
        if: always()
        run: uds run --no-progress teardown-infra --set DISTRO=${{ matrix.base }} --set AWS_REGION=${{ env.AWS_REGION }} --set RKE2_VERSION=${{ matrix.rke2_version }}
      - name: Cleanup ${{ matrix.base }} ${{ matrix.rke2_version }} AMI on failure
        shell: bash -e -o pipefail {0}
        if: failure()
        run: uds run --no-progress cleanup-ami --set AWS_REGION=${{ env.AWS_REGION }} --set RKE2_VERSION=${{ matrix.rke2_version }}
